<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        FgAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wB4AAMBAQIDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEI
        AwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwUBB/8AAQADDQEQ
        A7YBvwOyAbsDHgEkUAADEAEUA7YBvwOzAbwDGAEdDAADHAEiA0MBTgNLAVYDSwFWA0sBVgNLAVYDSwFW
        A0sBVgNLAVYDSwFWA0sBVgNLAVYDSwFWA0sBVgNLAVYDSwFWA0sBVgNLAVYDSwFWA0sBVgNLAVYDSwFW
        A0sBVgNLAVYDRgFRAyEBJ/wAA2oBdgj/A8kB0AMbASBIAAMPARID4QHlCP8DYAFuCwABAQNvAXsD9wH5
        A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3
        A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wPtAfADfQGJAwEBAhAAAzUBPgN8AYkDfAGJA3wBiQN8
        AYkDfAGJA3wBiQN8AYkDfAGJA3wBiQN8AYkDfAGJA3wBiQN8AYkDfAGJA3wBiQN8AYkDfAGJA0sBVpwA
        AzIBOgPtAfAI/wPMAdMDHAEiQAADEQEVA+EB5Qj/A/oB+wMeASQIAAMJAQsD4wHoA/kB+wPIAdADyAHQ
        A8gB0APIAdADyAHQA8gB0APIAdADyAHQA8gB0APIAdADyAHQA8gB0APIAdADyAHQA8gB0APIAdADyAHQ
        A8gB0APIAdADyAHQA8gB0APIAdAD6AHsA94B5AMXARwQAAN3AYVE/wOBAYygAANEAU4D7wHxCP8DyQHQ
        Ax8BJTgAAxABFAPiAeYI/wP6AfsDLgE2DAADFAEYBP8D0QHYA0YBUANGAVADRgFQA0YBUANGAVADRgFQ
        A0YBUANGAVADRgFQA0YBUANGAVADRgFQA0YBUANGAVADRgFQA0YBUANGAVADRgFQA0YBUANGAVADRgFQ
        A0YBUAPEAcwD+gH8Ax8BJhAAA3cBhQT/A/cB+AO9AcUDvQHFA70BxQO9AcUDvQHFA70BxQO9AcUDvQHF
        A70BxQO9AcUDvQHFA70BxQO9AcUD3QHiBP8DgQGMpAADRgFQA+8B8Qj/A8oB0QMbASAwAAMPARMD4gHm
        CP8D+QH6Ay8BNxAAAxkBHwT/A7cBwVgAA60BtwT/AyEBKBAAA3cBhQT/A64BtzQAA58BqQT/A4EBjKgA
        A0cBUQPtAfAI/wPMAdMDHAEiKAADEgEWA+IB5gj/A/oB+wMvATcUAAMZAR8E/wO3AcFYAAOtAbcE/wMh
        ASgQAAN3AYUE/wOuAbc0AAOfAakE/wOBAYysAANEAU4D7wHxCP8DyQHQAyABJiAAAxABFAPiAeYI/wP6
        AfsDLQE1GAADGQEfBP8DtwHBWAADrQG3BP8DIQEoEAADdwGFBP8DrgG3NAADnwGpBP8DgQGMsAADRgFQ
        A+0B8Aj/A8sB0gMcASEYAAMPARMD4gHmCP8D+QH6Ay8BNxwAAxkBHwT/A7cBwVgAA60BtwT/AyEBKBAA
        A3cBhQT/A64BtzQAA58BqQT/A4EBjLQAA0YBUAPsAe8I/wPOAdQDHQEjEAADEgEWA+IB5gj/A/oB+wMv
        ATcgAAMZAR8E/wO3AcFYAAOtAbcE/wMhASgQAAN3AYUE/wOuAbc0AAOfAakE/wPdAeIDygHRA8oB0QPK
        AdEDyAHPAxkBHxQAAwEBAgMUARgDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFgEb
        AxYBGwMWARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFQEaAwcBCSwAA0MBTQPt
        AfAI/wPJAdADIAEmCAADEAEUA+IB5gj/A/oB+wMtATUkAAMZAR8E/wO3AcFYAAOtAbcE/wMhASgQAAN3
        AYUE/wOuAbc0AAOfAakU/wT9AxkBHxQAAwgBCgNcAWgDZwF1A2cBdQNnAXUDZwF1A2cBdQNnAXUDZwF1
        A2cBdQNnAXUDZwF1A2cBdQNnAXUDZwF1A2cBdQNnAXUDZwF1A2cBdQNnAXUDZwF1A2cBdQNnAXUDZAFx
        AyMBKjAAA0UBTwPtAfAI/wPLAdIDHAEhAw8BEwPiAeYI/wP5AfoDLwE3KAADGQEfBP8DtwHBWAADrQG3
        BP8DIQEoEAADdwGFBP8DrgG3NAADnwGpBP8DvgHGA10BaANqAXYI/QMZAR8UAAMRARUDpQGzA7kBxgO5
        AcYDuQHGA7kBxgO5AcYDuQHGA7kBxgO5AcYDuQHGA7kBxgO5AcYDuQHGA7kBxgO5AcYDuQHGA7kBxgO5
        AcYDuQHGA7kBxgO5AcYDuQHGA7QBwQNBAUs0AANGAVAD7AHvCP8DzwHVA+QB6Aj/A/oB+wMvATcsAAMZ
        AR8E/wO3AcFYAAOtAbcE/wMhASgQAAN3AYUE/wOuAbc0AAOfAakE/wOBAYwEAAMYAR0D+wH8BP0DGQEf
        FAADMQE5A9AB2QPbAeMD2wHjA9sB4wPbAeMD2wHjA9sB4wPbAeMD2wHjA9sB4wPbAeMD2wHjA9sB4wPb
        AeMD2wHjA9sB4wPbAeMD2wHjA9sB4wPbAeMD2wHjA9sB4wPZAeADZQFxOAADQwFNA+0B8BD/A/kB+gMs
        ATQwAAMZAR8E/wO3AcFYAAOtAbcE/wMhASgQAAN3AYUE/wOwAbkDJwEuAycBLgMnAS4DJwEuAycBLgMn
        AS4DJwEuAycBLgMnAS4DJwEuAycBLgMnAS4DJwEuA7gBwQT/A4EBjAQAAxgBHQP7AfwE/QMZAR8UAANR
        AVwD/QT+Af8D/gH/A/4B/wP+Af8D/gH/A/4B/wP+Af8D/gH/A/4B/wP+Af8D/gH/A/4B/wP+Af8D/gH/
        A/4B/wP+Af8D/gH/A/4B/wP+Af8D/gH/A/4B/wP+Af8DigGWPAADUQFbEP8DSgFUNAADGQEfBP8DtwHB
        WAADrQG3BP8DIQEoEAADdwGFRP8DgQGMBAADGAEdA/sB/AT9AxkBHxQAAzEBOQOvAboDuAHEA7gBxAO4
        AcQDuAHEA7gBxAO4AcQDuAHEA7gBxAO4AcQDuAHEA7gBxAO4AcQDuAHEA7gBxAO4AcQDuAHEA7gBxAO4
        AcQDuAHEA7gBxAO4AcQDuQHDA00BWDgAAxEBFQPhAeUQ/wPLAdIDHAEhMAADGQEfBP8DtwHBWAADrQG3
        BP8DIQEoEAADdwGFRP8DgQGMBAADGAEdA/sB/AT9AxkBHxQAAxIBFgNoAXYDegGJA3oBiQN6AYkDegGJ
        A3oBiQN6AYkDegGJA3oBiQN6AYkDegGJA3oBiQN6AYkDegGJA3oBiQN6AYkDegGJA3oBiQN6AYkDegGJ
        A3oBiQN6AYkDeQGIAxUBGTQAAw8BEwPhAeUI/wP7AfwD7AHvCP8DyAHPAx0BIywAAxkBHwT/A7cBwVgA
        A60BtwT/AyEBKBAAA3cBhUT/A4EBjAQAAxgBHQP7AfwE/QMZAR8UAAMIAQoDNwFBA0IBTQNCAU0DQgFN
        A0IBTQNCAU0DQgFNA0IBTQNCAU0DQgFNA0IBTQNCAU0DQgFNA0IBTQNCAU0DQgFNA0IBTQNCAU0DQgFN
        A0IBTQNCAU0DQgFNA0EBTAMIAQowAAMPARID4QHlCP8D+AH5AywBMwNBAUsD7AHvCP8DyAHPAxoBHygA
        AxkBHwT/A7cBwQMNARADDQEQAw0BEAMNARADDQEQAw0BEAMNARADDQEQAw0BEAMNARADDQEQAw0BEAMN
        ARADDQEQAw0BEAMNARADDQEQAw0BEAMNARADDQEQAw0BEAMNARADtwHBBP8DIQEoEAADdwGFRP8DgQGM
        BAADGAEdA/sB/AT9AxkBHxQAAwEBAgMLBA4BEQMOAREDDgERAw4BEQMOAREDDgERAw4BEQMOAREDDgER
        Aw4BEQMOAREDDgERAw4BEQMOAREDDgERAw4BEQMOAREDDgERAw4BEQMOAREDDgERAw4BEQMBAQIsAAMR
        ARUD4QHlCP8D+QH6AywBMwgAA0EBSwPrAe4I/wPMAdMDHAEiJAADGQEfBP8DzwHWA10BaANdAWgDXQFo
        A10BaANdAWgDXQFoA10BaANdAWgDXQFoA10BaANdAWgDXQFoA10BaANdAWgDXQFoA10BaANdAWgDXQFo
        A10BaANdAWgDXQFoA10BaAPUAdoE/wMhASgQAAMuATcDSAFSA0gBUgNIAVIDTAFWA+wB7wT/A4gBkwNI
        AVIDSAFSA0gBUgNIAVIDSAFSA0gBUgNIAVIDSAFSA0gBUgNIAVIDHAEhBAADGAEdA/sB/AT9AxkBH6AA
        AxABFAPhAeUI/wP5AfoDKgExEAADQAFJA+wB7wj/A8gBzwMeASQgAAMZAR8E/wP9Af4D9QH3A/UB9wP1
        AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1
        AfcD9QH3A/UB9wP1AfcD9QH3A/oB/AT/AyEBKCAAAwUBBwPrAe4E/wM+AUcwAAMYAR0D+wH8BP0DGQEf
        nAADDwESA+EB5Qj/A/gB+QMsATQYAANDAU0D7AHvCP8DyQHQAxsBIBwAAxkBHwT/A/MB9gO1Ab4DtQG+
        A7UBvgO1Ab4DtQG+A7UBvgO1Ab4DtQG+A7UBvgO1Ab4DtQG+A7UBvgO1Ab4DtQG+A7UBvgO1Ab4DtQG+
        A7UBvgO1Ab4DtQG+A7UBvgO1Ab4D4AHlBP8DIQEoIAADBQEHA+sB7gT/A4wBlwN1AYEDdQGBA3UBgQN1
        AYEDdQGBA3UBgQN1AYEDdQGBA3UBgQN1AYEDdQGBA3UBgQOHAZII/QMZAR+YAAMRARUD4QHlCP8D+QH6
        AywBNCAAA0MBTQPsAe8I/wPMAdMDHAEiGAADGQEfBP8DzQHUAzgBQQM4AUEDOAFBAzgBQQM4AUEDOAFB
        AzgBQQM4AUEDOAFBAzgBQQM4AUEDOAFBAzgBQQM4AUEDOAFBAzgBQQM4AUEDOAFBAzgBQQM4AUEDOAFB
        AzgBQQO9AcYE/wMhASggAAMFAQcD6wHuQP8E/QMZAR+UAAMQARQD4gHmCP8D+QH6AywBMygAA0EBSwPt
        AfAI/wPIAc8DHgEkFAADGQEeBP8DwwHLAy4BNgMuATYDLgE2Ay4BNgMuATYDLgE2Ay4BNgMuATYDLgE2
        Ay4BNgMuATYDLgE2Ay4BNgMuATYDLgE2Ay4BNgMuATYDLgE2Ay4BNgMuATYDLgE2Ay4BNgPEAcwE/wMd
        ASMgAAMFAQcD6wHuQP8E/QMZAR+QAAMPARID4QHlCP8D+AH5Ay0BNTAAA0QBTgPtAfAI/wPJAdADGwEg
        EAADFAEZA+sB7wPbAeEDjwGaA48BmgOPAZoDjwGaA48BmgOPAZoDjwGaA48BmgOPAZoDjwGaA48BmgOP
        AZoDjwGaA48BmgOPAZoDjwGaA48BmgOPAZoDjwGaA48BmgOPAZoDjwGaA+oB7gPzAfYDEgEWIAADBQEH
        A+sB7kD/BP0DGQEfjAADEQEVA+EB5Qj/A/oB+wMuATY4AANFAU8D7AHvCP8DzAHTAxwBIgwAAwQBBQOi
        Aa0D/AH9A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1
        AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP1AfcD9QH3A/UB9wP9Af4DxAHMAwEBAiAAAwUBBwPqAe1A/QP7
        AfwDGAEeiAADDQEQA+IB5gj/A/oB+wMtATVAAANDAU0D7QHwCP8DyQHQAxgBHQsAAQEDMwE7A3MBfgN5
        AYUDeQGFA3kBhQN5AYUDeQGFA3kBhQN5AYUDeQGFA3kBhQN5AYUDeQGFA3kBhQN5AYUDeQGFA3kBhQN5
        AYUDeQGFA3kBhQN5AYUDeQGFA3kBhQN5AYUDbgF6AzQBPCcAAQEDFgEbAxYBGwMWARsDFgEbAxYBGwMW
        ARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARsDFgEbAxYBGwMWARuMAANuAXkI/wP5
        AfoDLwE3SAADRgFQA+8B8Qj/A2ABbgwAAwUBBwMgASYDJQEsAyUBLAMlASwDJQEsAyUBLAMlASwDJQEs
        AyUBLAMlASwDJQEsAyUBLAMlASwDJQEsAyUBLAMlASwDJQEsAyUBLAMlASwDJQEsAyUBLAMlASwDJQEs
        Ax0BIwMAAQH8AAMzATsD7AHvA/kB+gMwAThQAANHAVED6wHuA/oB+wMeAST/AHUAAxIBFgMFAQdYAAMR
        ARUDBQEH/wDpAAFCAU0BPgcAAT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIAD/8BAAHg
        AgABHwf/AeEC/wHhAQABwAIAAQ8H/wHgAv8BwQEAAYACAAEHAYABAAEPBP8B4AF/Af8BgQEAAYACAAEH
        AYABAAEPBP8B8AE/Af8BAwEAAYACAAEHAYABAAEPBP8B+AEfAf4BBwEAAY8C/wHHAY8B/wGPBP8B/AEP
        AfwBDwEAAY8C/wHHAY8B/wGPBP8B/gEHAfgBHwEAAY8C/wHHAY8B/wGPBf8BAwHwAT8BAAGPAv8BxwGP
        Af8BjwX/AYEB4AF/AQABjwL/AccBjwH/AYABfAIAAQEB/wLAAf8BAAGPAv8BxwGPAf8BgAF8AgABAQH/
        AeABAQH/AQABjwL/AccBjwH/AYABfAIAAQEB/wHwAQMB/wEAAY8C/wHHAY8B/wGIAXwCAAEBAf8B+AEH
        Af8BAAGPAv8BxwGAAQABCAF8AgABAQH/AfwBDwH/AQABjwL/AccBgAEAAQgBfAIAAQEB/wH4AQcB/wEA
        AY8C/wHHAYABAAEIAXwCAAEBAf8B8AEDAf8BAAGPAv8BxwGAAQABCAF8AgABAQH/AeABAQH/AQABgAIA
        AQcBgAEAAQgBfAIAAQEB/wLAAf8BAAGAAgABBwGAAQABCAF/BP8BgQHgAX8BAAGAAgABBwH4AX8B+AF/
        BP8BAwHwAT8BAAGAAgABBwH4AgABfwP/Af4BBwH4AR8BAAGAAgABBwH4AgABfwP/AfwBDwH8AQ8BAAGA
        AgABBwH4AgABfwP/AfgBHwH+AQcBAAGAAgABBwH4AgABfwP/AfABPwH/AQMBAAGAAgABBwH4AgABfwP/
        AeABfwH/AYEBAAGAAgABDwH4AgAE/wHgAv8BwQEAAcACAAEPB/8B4QL/AeEBAAv/AfMC/wHzAQAP/wEA
        Cw==
</value>
  </data>
</root>